name: Continuous Integration

on: [push]

env:
  # "Source" is set in the setup-dotnet action
  VCPKG_BINARY_SOURCES: 'clear;nuget,Source,readwrite'


jobs:
  build:
    strategy:
      matrix:
        os: ['windows-2019', 'ubuntu-20.04', 'ubuntu-18.04', 'macos-latest']
        include:
          - os: 'windows-2019'
            triplet: 'x64-windows'
            dotnet: ''
            generator: 'Visual Studio 16 2019'
            cmakeConfigArgs: '-A x64'
            binpath: './build/Debug/main.exe'
          - os: 'ubuntu-20.04'
            triplet: 'x64-linux'
            dotnet: 'mono'
            generator: 'Unix Makefiles'
            cmakeConfigArgs: ''
            binpath: './build/main'
          - os: 'ubuntu-18.04'
            triplet: 'x64-linux'
            dotnet: 'mono'
            generator: 'Unix Makefiles'
            cmakeConfigArgs: ''
            binpath: './build/main'
          - os: 'macos-latest'
            triplet: 'x64-osx'
            dotnet: 'mono'
            generator: 'Xcode'
            cmakeConfigArgs: ''
            binpath: './build/Debug/main'
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '3.1.x' # SDK Version to use.
          # Sets as "Source"
          source-url: https://nuget.pkg.github.com/ekilmer/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'debug nuget config'
        shell: 'bash'
        run: |
          # Written set-dotnet action writes the config here
          cat ../nuget.config

        # Needed for caching the actual vcpkg executable
      - name: 'Restore from cache and install vcpkg'
        uses: lukka/run-vcpkg@v4
        with:
          appendedCacheKey: ${{ matrix.os }}
          # Only cache the vcpkg executable. Libraries are restored using NuGet
          vcpkgArtifactIgnoreEntries: "!.git\n**/*\n!/vcpkg\n!vcpkg.exe\n!vcpkgArtifactIgnoreEntries\n"
          setupOnly: true

        # Omit this step if using manifests
      - name: 'vcpkg package install deps'
        shell: 'bash'
        run: |
          # Still need to explicitly set the api key here for whatever reason
          # ${{ matrix.dotnet }} $(${VCPKG_ROOT}/vcpkg fetch nuget | tail -n 1) setapikey ${{ secrets.GITHUB_TOKEN }} -source https://nuget.pkg.github.com/ekilmer/index.json
          "${VCPKG_ROOT}/vcpkg" install sqlite3 --triplet "${{ matrix.triplet }}" --debug

      - name: 'Build'
        shell: 'bash'
        run: |
          cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=$(pwd)/vcpkg/scripts/buildsystems/vcpkg.cmake -G "${{ matrix.generator }}" ${{ matrix.cmakeConfigArgs }}
          cmake --build build

      - name: 'Test'
        shell: 'bash'
        run: "${{ matrix.binpath }}"
